/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.metodoDeGausJordan.entidades;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author SaulUrias
 */
public class InterfazGaussJordan extends javax.swing.JFrame {

    /**
     * Creates new form interfazGauss
     */
    public InterfazGaussJordan() {
        initComponents();
    }

    /**
     * Atributos utilizados en la interfaz
     */
    int i, j, p = 0, n; // iteradores, apuntadores y tamaño de la matriz
    double a[][] = new double[10][11]; // arreglo que almacena los datos
    double e, x, y, z; // incognitas
    char[] letras = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'};

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbGauss = new javax.swing.JTable();
        txtTamanioMatriz = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        btAplicarMetodo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbGauss.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbGauss);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        btAplicarMetodo.setText("Boton");
        btAplicarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAplicarMetodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btAplicarMetodo)
                .addGap(3, 3, 3))
            .addGroup(layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(txtTamanioMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap(207, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTamanioMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                        .addComponent(btAplicarMetodo)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        n = Integer.parseInt(txtTamanioMatriz.getText());
        llenarTabla(n);
    }//GEN-LAST:event_okButtonActionPerformed

    private void btAplicarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAplicarMetodoActionPerformed
        llenarMatriz(n);
    }//GEN-LAST:event_btAplicarMetodoActionPerformed

    public void llenarTabla(int n) {
        DefaultTableModel tabla = new DefaultTableModel();
        for (int i = 0; i < n; i++) {
            tabla.addColumn(letras[i]);
        }
        tabla.addColumn("Resultado");
        String datosTabla[] = new String[4];

        tbGauss.setModel(tabla);

        for (int i = 0; i < n; i++) {
            //datosTabla[i] = "0"; 

            tabla.addRow(datosTabla);
        }

    }

    public void llenarMatriz(int n) {
        for (int i = 0; i < n; i++) // ciclo para añadir datos
        {
            for (int j = 0; j <= n; j++) {
                a[i][j] = Double.parseDouble((String) tbGauss.getModel().getValueAt(i, j));
                //System.out.println("a: " + a[i][j]);
            }
        }
        aplicarMetodo();
    }

    public void aplicarMetodo() {
        for (int i = 0; i < n; i++) {
            pivote(a, p, n);
            llenarMatrizActualizada(a, n);
            //inserte timer aqui
            
            hacerCeros(a, p, n);
            llenarMatrizActualizada(a, n);
            //inserte timer aqui
            
            p++;
        }
        
    }

    public void llenarMatrizActualizada(double matriz[][], int var) {
        TableModel tabla = tbGauss.getModel();
        
        for (int x = 0; x < var; x++) {
            for (int y = 0; y < var+1; y++) {
                tabla.setValueAt(matriz[x][y], x, y);
            }
        }
//                    
//         for (int j = 0; j < n; j++) {
//             tabla.addColumn(letras[j]);
//         }
// 
//        tabla.addColumn("Resultado");
//        String datosTabla[] = new String[a.length];
//        
//        tbGauss.setModel(tabla);
//
//          for(i=0;i<n;i++) // ciclo para añadir datos
//		{			
//		    for(j=0;j<=n;j++)
//		    {
//                        datosTabla[i] = String.valueOf(a[i][j]);
//                        
//                        tabla.addRow(datosTabla);
//		    }
//		}
    }
    
    public void pivote(double matriz[][], int p, int var) {
        double divicion = matriz[p][p]; //guardar sobre cuanto se va a dividir
        
        for (int y = 0; y < (var + 1); y++) { //recorrer la fila para ir dividiendo
            matriz[p][y] = matriz[p][y] / divicion;
        }
    }
    
    public void hacerCeros(double matriz[][], int p, int var) {
        for (int x = 0; x < var; x++) { //recorrer filas
            
            if (x != p) { //si el pivote no concuerda con la fila en la que la esta
                double constante = matriz[x][p]; //guardar constante del valor de la fila que se va a restar
                
                for (int z = 0; z < (var + 1); z++) { //recorrer columnas
                    matriz[x][z] = ((-1 * constante) * matriz[p][z]) + matriz[x][z]; //la matriz se le va a restar tantas veces el pivote por su valor actual
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGaussJordan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGaussJordan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGaussJordan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGaussJordan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazGaussJordan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAplicarMetodo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JTable tbGauss;
    private javax.swing.JTextField txtTamanioMatriz;
    // End of variables declaration//GEN-END:variables
}
